@mixin flexbox ($direction, $justify-content:center, $align-items:center,$wrap:nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify-content;
    align-items: $align-items;
    flex-wrap: $wrap;
}

@mixin flex-gap($gapRow:0,$gapCol:0) {
    row-gap: $gapRow;
    column-gap: $gapCol;
}

@mixin padding-x($padding: 0) {
    padding-left: $padding;
    padding-right: $padding;
}

@mixin padding-y($padding: 0) {
    padding-top: $padding;
    padding-bottom: $padding;
}

@mixin margin-x($margin: 0) {
  margin-left: $margin;
  margin-right: $margin;
}

@mixin margin-y($margin: 0) {
  margin-top: $margin;
  margin-bottom: $margin;
}

@mixin scrollbar($size, $foreground-color, $background-color: mix($foreground-color, white,  50%)) {
    // For Google Chrome
    &::-webkit-scrollbar {
      width:  $size;
      height: $size;
    }

    &::-webkit-scrollbar-thumb {
      background: $foreground-color;
    }

    &::-webkit-scrollbar-track {
      background: $background-color;
    }

    // For Internet Explorer
    & {
      scrollbar-face-color: $foreground-color;
      scrollbar-track-color: $background-color;
    }

    //for Firefox and Opera
    scrollbar-color: $background-color $foreground-color;
    scrollbar-width: thin;
}

@mixin hideScrollbar {
  // https://blogs.msdn.microsoft.com/kurlak/2013/11/03/hiding-vertical-scrollbars-with-pure-css-in-chrome-ie-6-firefox-opera-and-safari/
  // There is a CSS rule that can hide scrollbars in Webkit-based browsers (Chrome and Safari).
  &::-webkit-scrollbar {
    width: 0 !important
  }
  // There is a CSS rule that can hide scrollbars in IE 10+.
  -ms-overflow-style: none;

  // Use -ms-autohiding-scrollbar if you wish to display on hover.
  // -ms-overflow-style: -ms-autohiding-scrollbar;

  // There used to be a CSS rule that could hide scrollbars in Firefox, but it has since been deprecated.
  scrollbar-width: none;
}
